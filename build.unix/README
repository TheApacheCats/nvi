#	$Id: README,v 8.8 1996/03/06 19:45:03 bostic Exp $ (Berkeley) $Date: 1996/03/06 19:45:03 $

Nvi uses the GNU autoconf program for configuration and compilation.  You
should enter:

	./configure<carriage-return>
	make<carriage-return>

and nvi should configure the system and build two binaries, named "nex"
and "nvi" for you.  If Tcl/Tk libraries are available on your system,
it should build tknvi as well.

There are options that you can specify to the ./configure command.  See
the next section  for a description of these options.

If you want to rebuild nvi, for example, you change your mind about what
curses library implementation that you want to use, enter:

	make distclean<carriage-return>

and then reconfigure using "./configure" and whatever options you choose.

If you have trouble with this procedure, send email to the addresses
listed in ../README.  In that email, please provide a complete script
of the output for all of the above commands that you entered.

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
The nvi options that you can enter to the configure program are as
follows:

The most common of these are:

  --enable-debug          Build a debugging version.
  --enable-perlinterp     Compile a Perl interpreter into vi.
  --with-perl=ask|system  ask:     Prompt for the Perl library to use.
                          system:  Use the system Perl library.
  --enable-tclinterp      Compile a Tcl/Tk interpreter into vi.
  --with-tcl=ask|system   ask:     Prompt for the tcl/tk library to use
                          system:  Use the system tcl/tk library.
  --with-curses=ask|system|vi
                          ask:     Prompt for the curses library to use.
                          system:  Use the system curses library.
                          vi:      Use the vi-provided curses library.
  --with-db=library|vi    library: The C library or -ldb has the DB routines.
                          vi:      Use the vi-provided DB routines.
  --with-re=library|vi    library: Use the RE routines in the C library.
                          vi:      Use the vi-provided RE routines.

enable-debug:
	If you want to build nvi with no optimization, -g as a compiler
	flag, and have DEBUG defined in config.h, enter:

	--enable-debug

	as an argument to configure.

enable-perlinterp:
	If you have the Perl 5 libraries and you want to compile in the
	Perl interpreter, enter:

	--enable-perlinterp

	as an argument to configure.

with-perl:
	If you want configure to prompt you for the paths for the
	directories where the Perl include and library files live,
	enter:

	--with-perl=ask

	ask an argument to configure.  (The "system" argument causes
	configure to look in the usual directories for the Perl include
	files and libraries, and is the default.)

enable-tclinterp:
	If you have the Tk/Tcl libraries and you want to compile in the
	Tcl/Tk interpreter, enter:

	--enable-tclinterp

	as an argument to configure.

with-tcl:
	If you want configure to prompt you for the paths for the
	directories where the Tk/Tcl include and library files live,
	enter:

	--with-tcl=ask

	ask an argument to configure.  (The "system" argument causes
	configure to look in the usual directories for the Tk/Tcl
	include files and libraries, and is the default.)

with-curses:
	See the next section of this README for information about nvi and
	the curses library.

with-db:
	If your C library contains a copy of the Berkeley DB routines and
	you want to use them, enter:

	--with-db=library

	as an argument to configure, and the DB routines will be loaded
	from the C library.  Make sure that you DB routines are at least
	version 1.85 or later.  (The "vi" argument causes configure to
	use the DB routines bundled with the vi distribution, and is the
	default.)

with-re:
	If your C library contains an implementation of the POSIX 1003.2
	RE routines and you want to use them, enter:

	--with-re=library

	as an argument to configure, and the RE routines will be loaded
	from the C library.  Please ensure that your RE routines have
	Henry Spencer's extensions for doing vi-style "word" searches.
	(The "vi" argument causes configure to use the DB routines bundled
	with the vi distribution, and is the default.)

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
The major portability problem for nvi is selecting a curses library.
Unfortunately, it is not at all uncommon to find broken versions of curses
-- the original System V curses was broken, resulting in all vendors whose
implementations are derived from System V having broken implementations
in turn.

For this reason, BY DEFAULT, nvi uses the stripped-down curses library
that's included in its distribution.  Of course, it would be preferable
to use the vendor's curses library, or one of the newer implementations
of curses, e.g., ncurses.

To use the vendor's curses library, configure nvi as follows:

	./configure --with-curses=system<carriage-return>
	
To have the configure script prompt you for the path of the curses library
and the path of the <curses.h> include file, configure nvi as follows:

	./configure --with-curses=ask<carriage-return>
	
In this case, you will be prompted:

	Type in the pathname of the curses library:

You should enter the path of the curses library you want to use, e.g.,
"/usr/local/lib/libcurses.a".  You will then be prompted:

	Type in the pathname of the directory holding <curses.h>:

You should enter the path of the DIRECTORY where the compiler can find
the <curses.h> include file, e.g., "/usr/local/include/".

If you use the vendor's or other curses library, and you see any of the
following symptoms:

	+ Core dumps in curses routines.
	+ Line-by-line screen repainting instead of scrolling.
	+ Missing routines when compiling.
	+ Repainting the wrong characters on the screen.
	+ Displaying inverse video in the wrong places.

you have a broken curses implementation, and you should reconfigure nvi
to use another curses library or the curses library provided with nvi.
To use the curses library provided with nvi, configure nvi as follows:

	./configure --with-curses=vi<carriage-return>

There are two alternative sources for curses libraries:

#1: Compile the 4BSD curses library from any of the recent BSD
    releases: FreeBSD, NetBSD or 4.4BSD-Lite release 2.  These
    libraries should be able to support nvi.

#2: Retrieve and build the ncurses library.  This library is not
    recommended unreservedly, at least for now, for two reasons.
    First, it can't be built on any system where the compiler
    doesn't support function prototypes.  Second, it currently has
    a few bugs in its support for nvi.  It mostly works, but it's
    still not quite right.
