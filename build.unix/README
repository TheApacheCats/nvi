#	$Id: README,v 8.5 1996/02/28 18:45:28 bostic Exp $ (Berkeley) $Date: 1996/02/28 18:45:28 $

Nvi uses the GNU autoconf program for configuration and compilation.  You
should enter:

	./configure<carriage-return>
	make<carriage-return>

and nvi should configure the system and build two binaries, named "nex"
and "nvi" for you.  There are options that you can specify to the
./configure command.  See the next section  for a description of these
options.

If you want to rebuild nvi, for example, you change your mind about what
curses library implementation that you want to use, enter:

	make distclean<carriage-return>

and then follow the above instructions.

If you have trouble with this procedure, send email to the addresses
listed in ../README.  In that email, please provide a complete script
of the output for all of the above commands that you entered.

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
The nvi options that you can enter to the configure program are as
follows:

The most common of these are:

  --enable-tclinterp	  Compile a Tcl/Tk interpreter into vi.
  --with-curses=ask|system|vi
                          ask:     Prompt for the curses library to use.
                          system:  Use the system curses library.
                          vi:      Use the vi-provided curses library
  --with-db=library|vi    library: Use the DB routines in the C library.
                          vi:      Use the vi-provided DB routines
  --with-re=library|vi    library: Use the RE routines in the C library.
                          vi:      Use the vi-provided RE routines

with-curses:
	See the next section of this README for information about nvi and
	the curses library.

with-db:
	If your C library contains a copy of the Berkeley DB routines and
	you want to use them, enter:

	--with-db=library

	as an argument to configure, and the DB routines will be loaded
	from the C library.  Make sure that you DB routines are at least
	version 1.85 or later.

with-re:
	If your C library contains an implementation of the POSIX 1003.2
	RE routines and you want to use them, enter:

	--with-re=library

	as an argument to configure, and the RE routines will be loaded
	from the C library.  Please ensure that your RE routines have
	Henry Spencer's extensions for doing vi-style "word" searches.

enable-tclinterp:
	If you have the Tk/Tcl libraries and you want to compile in the
	Tcl/Tk interpreter, enter:

	--enable-tclinterp

	as an argument to configure.

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
The major portability problem for nvi is selecting a curses library.
Unfortunately, it is not at all uncommon to find broken versions of curses
-- the original System V curses was broken, resulting in all vendors whose
implementations are derived from System V having broken implementations
in turn.

For this reason, BY DEFAULT, nvi uses the stripped-down curses library
that's included in its distribution.  Of course, it would be preferable
to use the vendor's curses library, or one of the newer implementations
of curses, e.g., ncurses.

To use the vendor's curses library, configure nvi as follows:

	./configure --with-curses=system<carriage-return>
	
To have the configure script prompt you for the path of the curses library
and the path of the <curses.h> include file, configure nvi as follows:

	./configure --with-curses=ask<carriage-return>
	
In this case, you will be prompted:

	Type in the pathname of the curses library:

You should enter the path of the curses library you want to use, e.g.,
"/usr/local/lib/libcurses.a".  You will then be prompted:

	Type in the pathname of the directory holding <curses.h>:

You should enter the path of the DIRECTORY where the compiler can find
the <curses.h> include file, e.g., "/usr/local/include/".

If you use the vendor's or other curses library, and you see any of the
following symptoms:

	+ Core dumps in curses routines.
	+ Line-by-line screen repainting instead of scrolling.
	+ Missing routines when compiling.
	+ Repainting the wrong characters on the screen.
	+ Displaying inverse video in the wrong places.

you have a broken curses implementation, and you should reconfigure nvi
to use another curses library or the curses library provided with nvi.
To use the curses library provided with nvi, configure nvi as follows:

	./configure --with-curses=vi<carriage-return>

There are two alternative sources for curses libraries:

#1: Compile the 4BSD curses library from any of the recent BSD
    releases: FreeBSD, NetBSD or 4.4BSD-Lite release 2.  These
    libraries should be able to support nvi.

#2: Retrieve and build the ncurses library.  This library is not
    recommended unreservedly, at least for now, for two reasons.
    First, it can't be built on any system where the compiler
    doesn't support function prototypes.  Second, it currently has
    a few bugs in its support for nvi.  It mostly works, but it's
    still not quite right.
