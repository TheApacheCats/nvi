# setup
setenv VERSION 
setenv S /usr/src/nvi

# increment the version numbers
setenv X version.h
cd $S/ex && sco $X && echo "go to $VERSION" | sccs delget $X
#setenv X README
#cd $S && sco $X && vi $X && echo "go to $VERSION" | sccs delget $X
setenv X changelog
cd $S/docs && sco $X
vi $X && echo "go to $VERSION" | sccs delget $X

# build the distribution
cd $S/build && sh ./distrib
cd $S/catalog && make clean all check && rm dump __ck1 __ck2 && \
    chmod 444 english* *.check

# build a version
cd $S && rm -rf build.local && mkdir build.local && \
    cd build.local && ../build/configure --enable-debug && make
what nvi | gzip > ../../TK/history/$VERSION.gz
chmod 444 ../../TK/history/$VERSION.gz

# build the documents
cd $S/build.local && make cleandocs docs

# cleanup
cd $S && allout
cd $S && mv ip ip_cl build.local RCS/
find . -type d \! -perm 775
find . \( -name '*.rej' -o -name '*.orig' \)
find . -name RCS -prune -o -name SCCS -prune -o \
    -type f \( -perm -200 -o -perm -2 -o -perm -20 \)
chown -R bin.wsrc .

# create
cd $S/.. && mv -i nvi nvi-$VERSION
tar cFFf - nvi-$VERSION | gzip --best > /tmp/nvi-$VERSION.tar.gz
chmod 444 /tmp/nvi-$VERSION.tar.gz && mv -i nvi-$VERSION nvi
cd $S && mv RCS/build.local RCS/ip RCS/ip_cl .
cd $S/docs && sco changelog
